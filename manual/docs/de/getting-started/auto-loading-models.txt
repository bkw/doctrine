Doctrine kann Models auf zwei verschiedene Arten laden. Diese werden als conservative (lazy) und aggressive loading bezeichnet.
Conversative loading läd die PHP Dateien zunächst nicht direkt, sondern speichert den Pfad zur Klasse im Cache, damit dieser
später von Doctrine::autoload() aufgerufen werden kann, welcher vorher mit spl_autoload_register(array('Doctrine', 'autoload'))
registriert werden muss.

Die beiden Methoden im Vergleich:

+++ Conservative

Conservative Loading eignet sich sehr gut für Produktivumgebungen. Die Models werden erst geladen, wenn sie benötigt werden.
Voraussetzung dafür ist, dass jede Datei nur eine einzige Klasse enthält und nach dem Klassennamen benannt ist.
So muss zum Beispiel die Klasse User in der Datei User.php liegen.

Ein einfaches Beispiel für Conservative Loading:
<code type="php">
//Doctrine einbindne
require_once('pfad-zu-doctrine/lib/Doctrine.php');

//Den Autoloader registrieren
spl_autoload_register(array('Doctrine', 'autoload'));

Doctrine_Manager::getInstance()->setAttribute('model_loading', 'conservative');
Doctrine::loadModels('/pfad/zu/den/models'); // Damit werden die Model-Dateien noch nicht per require() eingebunden.

$user = new User(); // Dies ruft Doctrine::autoload() auf, um die Datei User.php einzubinden.
</code>



+++ Aggressive

Aggressive model loading is the default model loading method and is very simple, it will look for all files with a .php 
extension and will include it. Doctrine can not satisfy any inheritance and if your models extend another model, it cannot 
include them in the correct order so it is up to you to make sure all dependencies are satisfied in each class.

With aggressive model loading you can have multiple classes per file and the file name is not required to be related to the name of the class inside of the file.

The downside of aggressive model loading is that every php file is included in every request, so if you have lots of models 
it is recommended you use conservative model loading.

Here is an example of a basic Doctrine implementation using aggressive model loading.
<code type="php">
//require the base Doctrine class
require_once('path-to-doctrine/lib/Doctrine.php');

//register the autoloader
spl_autoload_register(array('Doctrine', 'autoload'));

Doctrine_Manager::getInstance()->setAttribute('model_loading', 'aggressive'); // Thi
Doctrine::loadModels('/path/to/models'); // This call will not require the found .php files

$user = new User(); // This will invoke Doctrine::autoload() to include the file so the User class is present.
</code>
