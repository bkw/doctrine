The INDEXBY keyword offers a way of mapping certain columns as collection / array keys. By default Doctrine indexes multiple elements to numerically indexed arrays / collections. The mapping starts from zero. In order to override this behaviour you need to use INDEXBY keyword as shown above:

<code type="php">
$q = new Doctrine_Query();
$q->from('User u INDEXBY u.name');

$users = $q->execute();
</code>

Now the users in $users collection are accessible through their names.

<code type="php">
print $user['jack daniels']->id;
</code>

The INDEXBY keyword can be applied to any given JOIN. This means that any given component can have each own indexing behaviour. In the following we use distinct indexing for both Users and Groups.


<code type="php">
$q = new Doctrine_Query();
$q->from('User u INDEXBY u.name')->innerJoin('u.Group g INDEXBY g.name');

$users = $q->execute();
</code>

Now lets print out the drinkers club's creation date. 

<code type="php">
print $users['jack daniels']->Group['drinkers club']->createdAt;
</code>
