Doctrine offers two ways of loading models. We have conservative(lazy) loading, and aggressive loading. Conservative loading 
will not require the PHP file initially, instead it will cache the path to the class name and this path is then used in the 
Doctrine::autoload() we registered earlier with spl_autoload_register(array('Doctrine', 'autoload')). Below are some examples 
using the both types of model loading.

+++ Conservative

Conservative model loading is going to be the ideal model loading method for a production environment. This method will lazy 
load all of the models instead of loading them all when model loading is executed.

Conservative model loading requires that each file contain only one class, and the file must be named after the class. Example, 
if you have a class named User, it must be contained in a file named User.php

Here is an example of a basic Doctrine implementation using conservative model loading.
<code type="php">
//require the base Doctrine class
require_once('path-to-doctrine/lib/Doctrine.php');

//register the autoloader
spl_autoload_register(array('Doctrine', 'autoload'));

Doctrine_Manager::getInstance()->setAttribute('model_loading', 'conservative');
Doctrine::loadModels('/path/to/models'); // This call will not require the found .php files

$user = new User(); // This will invoke Doctrine::autoload() to include the file so the User class is present.
</code>

+++ Aggressive

Aggressive model loading is the default model loading method and is very simple, it will look for all files with a .php 
extension and will include it. Doctrine can not satisfy any inheritance and if your models extend another model, it cannot 
include them in the correct order so it is up to you to make sure all dependencies are satisfied in each class.

With aggressive model loading you can have multiple classes per file, one class per file, and the file name is not 
required to be related to the name of the class inside of the file.

The downside of aggressive model loading is that every php file is included in every request, so if you have lots of models 
it is recommended you use conservative model loading.

Here is an example of a basic Doctrine implementation using aggressive model loading.
<code type="php">
//require the base Doctrine class
require_once('path-to-doctrine/lib/Doctrine.php');

//register the autoloader
spl_autoload_register(array('Doctrine', 'autoload'));

Doctrine_Manager::getInstance()->setAttribute('model_loading', 'aggressive'); // Thi
Doctrine::loadModels('/path/to/models'); // This call will not require the found .php files

$user = new User(); // This will invoke Doctrine::autoload() to include the file so the User class is present.
</code>