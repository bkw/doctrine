Opening a new database connection in Doctrine is very easy. If you wish to use PDO (www.php.net/PDO) you can just 
initalize a new PDO object:

<code type="php">
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';

try {
    $dbh = new PDO($dsn, $user, $password);
    $conn = Doctrine_Manager::connection($dbh);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}
</code>

Note: Directly passing a PDO instance to Doctrine_Manager::connection() will not allow Doctrine to be aware of the username 
and password for the connection, since their is no way to retrieve it from an existing PDO instance. The username and password 
is required in order for Doctrine to be able to create and drop databases. To get around this you can manually set the 
username and password option directly on the $conn object.

<code type="php">
$conn->setOption('username', 'username');
$conn->setOption('password', 'password');
</code>