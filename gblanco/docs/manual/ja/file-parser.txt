パーサーは多くの異なるフォーマットからダンプとロードを行うためにビルドされます。現在xmlとymlが唯一のドライバーですが後でcsvといった他のファイルフォーマットも追加されます。dump()とload()上の$type引数でロード/ダンプをするデータを指定できます。

++ ダンプする

配列をyml変数にダンプする

<code type="php">
$array = array('test' => array('key' => 'value'), 'test2' => 'test');

// 配列をymlにダンプして返し、$yml(ファイルに書き込まない)に設定する。ディスクに書き込みたい場合nullをymlファイルへのパスに置き換える
$yml = Doctrine_Parser::dump($array, 'yml');
</code>

$ymlには次の内容が含まれます
<code type="yaml">
---
test: 
  key: value
test2: test
</code>


配列をymlファイルにダンプする

<code type="php">
$array = array('test' => array('key' => 'value'), 'test2' => 'test');

// ymlパーサーを利用して上記の配列をtest.ymlにダンプする
Doctrine_Parser::dump($array, 'yml', 'test.yml');
</code>

test.ymlという名前のファイルが作成され次の内容が含まれます
<code type="yaml">
---
test: 
  key: value
test2: test
</code>

++ ロードする

ymlファイルからデータをロードしてPHP配列にダンプします

<code type="php">
$array = array('test' => array('key' => 'value'), 'test2' => 'test');

// ymlパーサーダンパーを利用して上記の配列をtext.ymlにダンプする
Doctrine_Parser::dump($array, 'yml', 'test.yml');

// ymlパーサーローダーを利用してダンプされたymlファイルをオリジナルの配列フォーマットに戻す
$array = Doctrine_Parser::load('test.yml', 'yml');

print_r($array);
</code>

print_r()は次の内容を出力します

<code>
Array
(
    [test] => Array
        (
            [key] => value
        )

    [test2] => test
)
</code>